<?xml version="1.0" encoding="UTF-8"?>
<project name="prok_modular" default="all">
  
  
  <property file="prokModularProcessingBuild.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.orig/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.klib"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/packager.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.core.classpath">
    <pathelement location="${basedir}/../../processing-3.3/core/library/core.jar"/>
  </path>
  
  <path id="library.jssc.classpath">
    <pathelement location="${basedir}/ProkModularProcessingApp/lib/jssc.jar"/>
  </path>
  
  <path id="library.slf4j-api-1.7.2.classpath">
    <pathelement location="${basedir}/ProkModularProcessingApp/lib/log4j-1.2.17.jar"/>
    <pathelement location="${basedir}/ProkModularProcessingApp/lib/slf4j-api-1.7.2.jar"/>
    <pathelement location="${basedir}/ProkModularProcessingApp/lib/slf4j-log4j12-1.7.2.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module controlp5 -->
  
  <dirname property="module.controlp5.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.controlp5" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.controlp5" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.controlp5" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.controlp5" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="controlp5.output.dir" value="${module.controlp5.basedir}/out/production/controlp5"/>
  <property name="controlp5.testoutput.dir" value="${module.controlp5.basedir}/out/test/controlp5"/>
  
  <path id="controlp5.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="controlp5.module.production.classpath">
    <path refid="${module.jdk.classpath.controlp5}"/>
    <path refid="library.core.classpath"/>
  </path>
  
  <path id="controlp5.runtime.production.module.classpath">
    <pathelement location="${controlp5.output.dir}"/>
    <path refid="library.core.classpath"/>
  </path>
  
  <path id="controlp5.module.classpath">
    <path refid="${module.jdk.classpath.controlp5}"/>
    <pathelement location="${controlp5.output.dir}"/>
    <path refid="library.core.classpath"/>
  </path>
  
  <path id="controlp5.runtime.module.classpath">
    <pathelement location="${controlp5.testoutput.dir}"/>
    <pathelement location="${controlp5.output.dir}"/>
    <path refid="library.core.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.controlp5">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.controlp5">
    <patternset refid="excluded.from.module.controlp5"/>
  </patternset>
  
  <path id="controlp5.module.sourcepath">
    <dirset dir="${module.controlp5.basedir}/../processing/controlp5">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.controlp5" depends="compile.module.controlp5.production,compile.module.controlp5.tests" description="Compile module controlp5"/>
  
  <target name="compile.module.controlp5.production" description="Compile module controlp5; production classes">
    <mkdir dir="${controlp5.output.dir}"/>
    <javac destdir="${controlp5.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.controlp5}/javac">
      <compilerarg line="${compiler.args.controlp5}"/>
      <bootclasspath refid="controlp5.module.bootclasspath"/>
      <classpath refid="controlp5.module.production.classpath"/>
      <src refid="controlp5.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.controlp5"/>
    </javac>
    
    <copy todir="${controlp5.output.dir}">
      <fileset dir="${module.controlp5.basedir}/../processing/controlp5/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.controlp5.tests" depends="compile.module.controlp5.production" description="compile module controlp5; test classes" unless="skip.tests"/>
  
  <target name="clean.module.controlp5" description="cleanup module">
    <delete dir="${controlp5.output.dir}"/>
    <delete dir="${controlp5.testoutput.dir}"/>
  </target>
  
  
  <!-- Module ProkModularCore -->
  
  <dirname property="module.prokmodularcore.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.prokmodularcore" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.prokmodularcore" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.prokmodularcore" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.prokmodularcore" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="prokmodularcore.output.dir" value="${module.prokmodularcore.basedir}/out/production/ProkModularCore"/>
  <property name="prokmodularcore.testoutput.dir" value="${module.prokmodularcore.basedir}/out/test/ProkModularCore"/>
  
  <path id="prokmodularcore.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="prokmodularcore.module.production.classpath">
    <path refid="${module.jdk.classpath.prokmodularcore}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokmodularcore.runtime.production.module.classpath">
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokmodularcore.module.classpath">
    <path refid="${module.jdk.classpath.prokmodularcore}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokmodularcore.runtime.module.classpath">
    <pathelement location="${prokmodularcore.testoutput.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.prokmodularcore">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.prokmodularcore">
    <patternset refid="excluded.from.module.prokmodularcore"/>
  </patternset>
  
  <path id="prokmodularcore.module.sourcepath">
    <dirset dir="${module.prokmodularcore.basedir}/ProkModularCore">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.prokmodularcore" depends="compile.module.prokmodularcore.production,compile.module.prokmodularcore.tests" description="Compile module ProkModularCore"/>
  
  <target name="compile.module.prokmodularcore.production" description="Compile module ProkModularCore; production classes">
    <mkdir dir="${prokmodularcore.output.dir}"/>
    <javac destdir="${prokmodularcore.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.prokmodularcore}/javac">
      <compilerarg line="${compiler.args.prokmodularcore}"/>
      <bootclasspath refid="prokmodularcore.module.bootclasspath"/>
      <classpath refid="prokmodularcore.module.production.classpath"/>
      <src refid="prokmodularcore.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.prokmodularcore"/>
    </javac>
    
    <copy todir="${prokmodularcore.output.dir}">
      <fileset dir="${module.prokmodularcore.basedir}/ProkModularCore/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.prokmodularcore.tests" depends="compile.module.prokmodularcore.production" description="compile module ProkModularCore; test classes" unless="skip.tests"/>
  
  <target name="clean.module.prokmodularcore" description="cleanup module">
    <delete dir="${prokmodularcore.output.dir}"/>
    <delete dir="${prokmodularcore.testoutput.dir}"/>
  </target>
  
  
  <!-- Module ProkDrumPatchTools -->
  
  <dirname property="module.prokdrumpatchtools.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.prokdrumpatchtools" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.prokdrumpatchtools" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.prokdrumpatchtools" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.prokdrumpatchtools" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="prokdrumpatchtools.output.dir" value="${module.prokdrumpatchtools.basedir}/out/production/ProkDrumPatchTools"/>
  <property name="prokdrumpatchtools.testoutput.dir" value="${module.prokdrumpatchtools.basedir}/out/test/ProkDrumPatchTools"/>
  
  <path id="prokdrumpatchtools.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="prokdrumpatchtools.module.production.classpath">
    <path refid="${module.jdk.classpath.prokdrumpatchtools}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokdrumpatchtools.runtime.production.module.classpath">
    <pathelement location="${prokdrumpatchtools.output.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokdrumpatchtools.module.classpath">
    <path refid="${module.jdk.classpath.prokdrumpatchtools}"/>
    <pathelement location="${prokdrumpatchtools.output.dir}"/>
    <pathelement location="${prokmodularcore.testoutput.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokdrumpatchtools.runtime.module.classpath">
    <pathelement location="${prokdrumpatchtools.testoutput.dir}"/>
    <pathelement location="${prokdrumpatchtools.output.dir}"/>
    <pathelement location="${prokmodularcore.testoutput.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.prokdrumpatchtools">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.prokdrumpatchtools">
    <patternset refid="excluded.from.module.prokdrumpatchtools"/>
  </patternset>
  
  <path id="prokdrumpatchtools.module.sourcepath">
    <dirset dir="${module.prokdrumpatchtools.basedir}/ProkDrumPatchTools">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.prokdrumpatchtools" depends="compile.module.prokdrumpatchtools.production,compile.module.prokdrumpatchtools.tests" description="Compile module ProkDrumPatchTools"/>
  
  <target name="compile.module.prokdrumpatchtools.production" depends="compile.module.prokmodularcore" description="Compile module ProkDrumPatchTools; production classes">
    <mkdir dir="${prokdrumpatchtools.output.dir}"/>
    <javac destdir="${prokdrumpatchtools.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.prokdrumpatchtools}/javac">
      <compilerarg line="${compiler.args.prokdrumpatchtools}"/>
      <bootclasspath refid="prokdrumpatchtools.module.bootclasspath"/>
      <classpath refid="prokdrumpatchtools.module.production.classpath"/>
      <src refid="prokdrumpatchtools.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.prokdrumpatchtools"/>
    </javac>
    
    <copy todir="${prokdrumpatchtools.output.dir}">
      <fileset dir="${module.prokdrumpatchtools.basedir}/ProkDrumPatchTools/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.prokdrumpatchtools.tests" depends="compile.module.prokdrumpatchtools.production" description="compile module ProkDrumPatchTools; test classes" unless="skip.tests"/>
  
  <target name="clean.module.prokdrumpatchtools" description="cleanup module">
    <delete dir="${prokdrumpatchtools.output.dir}"/>
    <delete dir="${prokdrumpatchtools.testoutput.dir}"/>
  </target>
  
  
  <!-- Module ProkModularEditor -->
  
  <dirname property="module.prokmodulareditor.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.prokmodulareditor" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.prokmodulareditor" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.prokmodulareditor" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.prokmodulareditor" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="prokmodulareditor.output.dir" value="${module.prokmodulareditor.basedir}/out/production/ProkModularEditor"/>
  <property name="prokmodulareditor.testoutput.dir" value="${module.prokmodulareditor.basedir}/out/test/ProkModularEditor"/>
  
  <path id="prokmodulareditor.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="prokmodulareditor.module.production.classpath">
    <path refid="${module.jdk.classpath.prokmodulareditor}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokmodulareditor.runtime.production.module.classpath">
    <pathelement location="${prokmodulareditor.output.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokmodulareditor.module.classpath">
    <path refid="${module.jdk.classpath.prokmodulareditor}"/>
    <pathelement location="${prokmodulareditor.output.dir}"/>
    <pathelement location="${prokmodularcore.testoutput.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  <path id="prokmodulareditor.runtime.module.classpath">
    <pathelement location="${prokmodulareditor.testoutput.dir}"/>
    <pathelement location="${prokmodulareditor.output.dir}"/>
    <pathelement location="${prokmodularcore.testoutput.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.prokmodulareditor">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.prokmodulareditor">
    <patternset refid="excluded.from.module.prokmodulareditor"/>
  </patternset>
  
  <path id="prokmodulareditor.module.sourcepath">
    <dirset dir="${module.prokmodulareditor.basedir}/ProkModularEditor">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.prokmodulareditor" depends="compile.module.prokmodulareditor.production,compile.module.prokmodulareditor.tests" description="Compile module ProkModularEditor"/>
  
  <target name="compile.module.prokmodulareditor.production" depends="compile.module.prokmodularcore" description="Compile module ProkModularEditor; production classes">
    <mkdir dir="${prokmodulareditor.output.dir}"/>
    <javac destdir="${prokmodulareditor.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.prokmodulareditor}/javac">
      <compilerarg line="${compiler.args.prokmodulareditor}"/>
      <bootclasspath refid="prokmodulareditor.module.bootclasspath"/>
      <classpath refid="prokmodulareditor.module.production.classpath"/>
      <src refid="prokmodulareditor.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.prokmodulareditor"/>
    </javac>
    
    <copy todir="${prokmodulareditor.output.dir}">
      <fileset dir="${module.prokmodulareditor.basedir}/ProkModularEditor/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.prokmodulareditor.tests" depends="compile.module.prokmodulareditor.production" description="compile module ProkModularEditor; test classes" unless="skip.tests"/>
  
  <target name="clean.module.prokmodulareditor" description="cleanup module">
    <delete dir="${prokmodulareditor.output.dir}"/>
    <delete dir="${prokmodulareditor.testoutput.dir}"/>
  </target>
  
  
  <!-- Module ProkModularProcessingApp -->
  
  <dirname property="module.prokmodularprocessingapp.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.prokmodularprocessingapp" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.prokmodularprocessingapp" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.prokmodularprocessingapp" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.prokmodularprocessingapp" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="prokmodularprocessingapp.output.dir" value="${module.prokmodularprocessingapp.basedir}/out/production/ProkModularProcessingApp"/>
  <property name="prokmodularprocessingapp.testoutput.dir" value="${module.prokmodularprocessingapp.basedir}/out/test/ProkModularProcessingApp"/>
  
  <path id="prokmodularprocessingapp.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="prokmodularprocessingapp.module.production.classpath">
    <path refid="${module.jdk.classpath.prokmodularprocessingapp}"/>
    <path refid="library.core.classpath"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
    <pathelement location="${prokdrumpatchtools.output.dir}"/>
    <pathelement location="${controlp5.output.dir}"/>
  </path>
  
  <path id="prokmodularprocessingapp.runtime.production.module.classpath">
    <pathelement location="${prokmodularprocessingapp.output.dir}"/>
    <path refid="library.core.classpath"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
    <pathelement location="${prokdrumpatchtools.output.dir}"/>
    <pathelement location="${controlp5.output.dir}"/>
  </path>
  
  <path id="prokmodularprocessingapp.module.classpath">
    <path refid="${module.jdk.classpath.prokmodularprocessingapp}"/>
    <pathelement location="${prokmodularprocessingapp.output.dir}"/>
    <path refid="library.core.classpath"/>
    <pathelement location="${prokmodularcore.testoutput.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
    <pathelement location="${prokdrumpatchtools.testoutput.dir}"/>
    <pathelement location="${prokdrumpatchtools.output.dir}"/>
    <pathelement location="${controlp5.testoutput.dir}"/>
    <pathelement location="${controlp5.output.dir}"/>
  </path>
  
  <path id="prokmodularprocessingapp.runtime.module.classpath">
    <pathelement location="${prokmodularprocessingapp.testoutput.dir}"/>
    <pathelement location="${prokmodularprocessingapp.output.dir}"/>
    <path refid="library.core.classpath"/>
    <pathelement location="${prokmodularcore.testoutput.dir}"/>
    <pathelement location="${prokmodularcore.output.dir}"/>
    <path refid="library.jssc.classpath"/>
    <path refid="library.slf4j-api-1.7.2.classpath"/>
    <pathelement location="${prokdrumpatchtools.testoutput.dir}"/>
    <pathelement location="${prokdrumpatchtools.output.dir}"/>
    <pathelement location="${controlp5.testoutput.dir}"/>
    <pathelement location="${controlp5.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.prokmodularprocessingapp">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.prokmodularprocessingapp">
    <patternset refid="excluded.from.module.prokmodularprocessingapp"/>
  </patternset>
  
  <path id="prokmodularprocessingapp.module.sourcepath">
    <dirset dir="${module.prokmodularprocessingapp.basedir}/ProkModularProcessingApp">
      <include name="src"/>
      <include name="img"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.prokmodularprocessingapp" depends="compile.module.prokmodularprocessingapp.production,compile.module.prokmodularprocessingapp.tests" description="Compile module ProkModularProcessingApp"/>
  
  <target name="compile.module.prokmodularprocessingapp.production" depends="compile.module.prokmodularcore,compile.module.prokdrumpatchtools,compile.module.controlp5" description="Compile module ProkModularProcessingApp; production classes">
    <mkdir dir="${prokmodularprocessingapp.output.dir}"/>
    <javac destdir="${prokmodularprocessingapp.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.prokmodularprocessingapp}/javac">
      <compilerarg line="${compiler.args.prokmodularprocessingapp}"/>
      <bootclasspath refid="prokmodularprocessingapp.module.bootclasspath"/>
      <classpath refid="prokmodularprocessingapp.module.production.classpath"/>
      <src refid="prokmodularprocessingapp.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.prokmodularprocessingapp"/>
    </javac>
    
    <copy todir="${prokmodularprocessingapp.output.dir}">
      <fileset dir="${module.prokmodularprocessingapp.basedir}/ProkModularProcessingApp/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.prokmodularprocessingapp.basedir}/ProkModularProcessingApp/img">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.prokmodularprocessingapp.tests" depends="compile.module.prokmodularprocessingapp.production" description="compile module ProkModularProcessingApp; test classes" unless="skip.tests"/>
  
  <target name="clean.module.prokmodularprocessingapp" description="cleanup module">
    <delete dir="${prokmodularprocessingapp.output.dir}"/>
    <delete dir="${prokmodularprocessingapp.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.controlp5, clean.module.prokmodularcore, clean.module.prokdrumpatchtools, clean.module.prokmodulareditor, clean.module.prokmodularprocessingapp, clean.artifact.prokmodularprocessingapp.jar" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.controlp5, compile.module.prokmodularcore, compile.module.prokdrumpatchtools, compile.module.prokmodulareditor, compile.module.prokmodularprocessingapp" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.prokmodularprocessingapp.jar" value="${basedir}/ProkModularProcessingApp/build"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.ProkModularProcessingApp.jar" value="${artifacts.temp.dir}/ProkModularProcessingApp.jar"/>
  </target>
  
  <target name="clean.artifact.prokmodularprocessingapp.jar" description="clean ProkModularProcessingApp.jar artifact output">
    <delete dir="${artifact.output.prokmodularprocessingapp.jar}"/>
  </target>
  
  <target name="artifact.prokmodularprocessingapp.jar" depends="init.artifacts, compile.module.prokmodularprocessingapp, compile.module.prokmodularcore, compile.module.prokdrumpatchtools, compile.module.controlp5" description="Build &#39;ProkModularProcessingApp.jar&#39; artifact">
    <mkdir dir="${artifact.output.prokmodularprocessingapp.jar}"/>
    <jar destfile="${temp.jar.path.ProkModularProcessingApp.jar}" duplicate="preserve" manifest="${basedir}/ProkModularProcessingApp/src/META-INF/MANIFEST.MF">
      <zipfileset dir="${prokmodularprocessingapp.output.dir}"/>
      <zipfileset dir="${prokmodularcore.output.dir}"/>
      <zipfileset dir="${prokdrumpatchtools.output.dir}"/>
      <zipfileset dir="${controlp5.output.dir}"/>
      <zipfileset dir="${basedir}/work_dir/img" prefix="img"/>
    </jar>
    <copy file="${temp.jar.path.ProkModularProcessingApp.jar}" tofile="${artifact.output.prokmodularprocessingapp.jar}/ProkModularProcessingApp.jar"/>
    <copy file="${basedir}/ProkModularProcessingApp/lib/jssc.jar" tofile="${artifact.output.prokmodularprocessingapp.jar}/jssc.jar"/>
    <copy file="${basedir}/ProkModularProcessingApp/lib/log4j-1.2.17.jar" tofile="${artifact.output.prokmodularprocessingapp.jar}/log4j-1.2.17.jar"/>
    <copy file="${basedir}/ProkModularProcessingApp/lib/slf4j-api-1.7.2.jar" tofile="${artifact.output.prokmodularprocessingapp.jar}/slf4j-api-1.7.2.jar"/>
    <copy file="${basedir}/ProkModularProcessingApp/lib/slf4j-log4j12-1.7.2.jar" tofile="${artifact.output.prokmodularprocessingapp.jar}/slf4j-log4j12-1.7.2.jar"/>
    <copy file="${basedir}/../../processing-3.3/core/library/core.jar" tofile="${artifact.output.prokmodularprocessingapp.jar}/core.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.prokmodularprocessingapp.jar" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>